Project Software Engineering
Tungrorum

Groepsleden (groep 4)

Sam van Rijn (Groepsverantwoordelijke) 
Sam Van Gucht 
Sibren Polders 
Sibrand Staessens 
Niels Schepers 


























Probleemstelling

Het project bestaat uit het implementeren van een variant van Carcassonne, een bordspel voor 2 tot 5 spelers. Elke niet-menselijke speler is een AI-gestuurde robot. 
Het spel bestaat uit een vast aantal tegels, elke speler beschikt over 7 pionnen. Elke tegel bestaat uit een aantal landschapselementen (in dit spel: weg, klooster, weide, stad, kruispunt). 

Spelverloop:
Eerst worden tegels getrokken, totdat een tegel getrokken wordt die 3 landeigenschappen bevat. Deze dient als starttegel van het spel en wordt op de tafel geplaatst.
Vervolgens trekken spelers om de beurt een tegel, en deze tegel dient als volgt op het spelbord gelegd te worden: de te plaatsen tegel moet aan zijn grenzen landschapselementen bevatten die overeenkomen met de landschapselementen van de daarbij aangrenzende tegels (wei aan wei, stad aan stad, etc.). Indien de tegel geen geldige plaats op het bord kan krijgen, wordt een nieuwe tegel getrokken totdat de getrokken tegel een geldige plaats kan krijgen. Onplaatsbare tegels worden terug bij de nog niet geplaatste tegels gevoegd.
De plaatsing heeft als gevolg dat gebieden op het spelbord worden uitgebreid, wanneer aangrenzende elementen van hetzelfde type zijn. De speler heeft de mogelijkheid om na plaatsing van een tegel, één van zijn pionnen op een landeigenschap van die tegel te plaatsen. Een pion wordt benoemd naargelang de landeigenschap waarop hij geplaatst is (wei → boer, stad →  ridder, klooster →  monnik, weg →  struikrover). Beperkingen worden opgelegd bij het plaatsen van de pion: indien het landschapselement aan een gebied toegevoegd wordt waar reeds een pion op staat, dan mag er geen pion op geplaatst worden. Indien een gebied niet meer kan uitgebreid worden, worden de punten van dat gebied aan de speler zijn totaal toegekend (zie hieronder voor de puntentelling) en mag hij deze pion terugnemen (alleen als dit geen boer op een weide is, die moeten tot het einde van het spel geplaatst blijven).
Als geen tegels meer geplaatst kunnen worden, is het spel gedaan en worden de punten als volgt toegekend (deze regels gelden ook voor wanneer in het spel zelf een gebied vervolledigd wordt):
Indien meerdere spelers pionnen hebben op een afgewerkt gebied, worden de punten toegekend aan de speler met de meeste pionnen op dat gebied. Indien er een gelijk aantal pionnen is, worden de punten aan elke speler toegekend.
Ridders, struikrovers en monniken die nog op onafgewerkte gebieden staan op het einde van het spel zijn waardeloos. De boeren verzorgen enkel afgewerkte steden langs hun weiland. Voor elke afgewerkte stad krijgt de speler met de meeste boeren in dat weiland 4 punten.
Ridder (stad): Per stadstegel komen er twee punten bij.
Monnik (klooster): Een klooster is afgewerkt wanneer het omringd wordt door 8 tegels. Hiervoor krijgt de speler 9 punten.
Struikrover (weg): Een weg kan eindigen bij een stad, kruispunt of klooster. Per tegel krijgt de speler hier 1 punt voor.







Systeemattributen:

Robuustheid
Vlot speelbaar
Duidelijke en responsieve interface
Plezierigheid
Geen zware systeemeisen
Object-Oriented (C++ en Qt)
Portability

Systeemfuncties:

R1. Programma opstarten
R2. Programma afsluiten
R3. Nieuw lokaal spel starten
aantal spelers instellen
aantal en niveau van computergestuurde spelers instellen
weergave van de verschillende spelers instellen
aantal landtegels instellen
standaardinstellingen instellen
R4. Nieuwe starttegel genereren
R5. Spel beëindigen
R6. Nieuw spel starten met de vorige instellingen (herstarten)
R7. Opslaan van een spel
R8. Voortzetten van een vorig spel (laden van een spel)
R9. Help raadplegen
R10. Van speler wisselen
R11. Aangeven welke speler aan beurt is
R12. Spelers die het spel verlaten, computergestuurd instellen/maken
R13. Tegel van stapel nemen
R14. Tegel terug bij stapel plaatsen
R15. Tegel draaien
R16. Tegel op tafel plaatsen
validatie plaatsing
melding bij verkeerde plaatsing
R17. Pion plaatsen
validatie plaatsing
type toewijzen bij correcte plaatsing
melding bij verkeerde plaatsing
R18. Pion terugnemen
validatie terugname
melding bij verkeerde terugname
punten toekennen bij correcte terugname
R19. Zicht over geplaatste tegels kunnen veranderen
R20. Informatie over het programma weergeven
R21. Spel pauzeren
R22. Punten per speler bijhouden
R23. Spelerstatistieken bijhouden
punten
pionnen
positie in de ranglijst
R24. Aantal resterende tegels weergeven
R25. Duur van het spel weergeven
R26. Einde van het spel vaststellen
Punten tellen
R27. Highscoretabellen bijhouden  (alleen voor menselijke spelers)
R28. Geluid afspelen als
ongeldige zet gedaan
wisselen speler
bijtelling punten
einde spel
pion plaatsen
landtegel plaatsen
draaien landtegel
pion terugnemen
starttegel genereren
achtergrondmuziek
R29. Geluid aan- en uitzetten
achtergrond
effectgeluiden
R30. Achtergrond instellen
R31. Achtergrond inladen
R32. Cheats toelaten (vooral voor het testen van de software)
R33. Animatie weergeven bij
draaien tegels
pion plaatsen














Brief Use Cases:

UC 1: Nieuw spel starten
Actoren : Speler(s)
Beschrijving : Als de applicatie is opgestart kan de speler een nieuw spel configureren en opstarten. De speler voert allerlei specificaties in naargelang zijn voorkeur. Hierna start de speler het spel.

UC 2: Een beurt afleggen
Actoren : Huidige speler
Beschrijving : Tijdens het verloop van het spel trekt de huidige speler een tegel van de stapel. Deze plaatst hij dan op de tafel. De speler kiest hierna (indien mogelijk) of hij een pion op de net geplaatste tegel legt of niet. Hierna gaat de beurt naar de volgende speler.

UC 3: Help raadplegen
Actoren : Een speler
Beschrijving : Tijdens het uitvoeren van de applicatie wenst een speler meer informatie te bekomen over spelregels, programmainstellingen, ... . Hiertoe roept hij het systeem op om hulp. Na het ingeven van bepaalde zoektermen, geeft het systeem de gevraagde informatie weer. Nadat de gebruiker al het gewenste is te weten gekomen, laat hij het systeem weten dat hij de hulpfunctie mag afsluiten.

UC 4: Programmainstellingen veranderen
Actoren : Een speler
Beschrijving : Tijdens het uitvoeren van de applicatie wenst een speler bepaalde programmainstellingen te wijzigen (zoals geluid aan/uit, achtergrond, animatie aan/uit, grootte van de tafel). Hiertoe laat hij het programma weten dat hij een bepaalde instelling wil veranderen. Hij geeft het programma de gewenste vernieuwing en het programma keurt dat dan goed of niet. Na de goedkeuring worden de veranderingen doorgevoerd.

UC 5: Spel opslaan
Actoren : Een speler
Beschrijving : Tijdens het spelverloop kan een speler het huidige spel naar een bestand opslaan. De speler geeft dan een gewenste bestandslocatie door aan het programma. Het programma slaat de huidige spelsituatie op in een bestand met een standaardnaam. 

UC 6: Spel inladen
Actoren : Een speler
Beschrijving : Tijdens het uitvoeren van de applicatie kan een speler een vorige spelsituatie inladen. De gebruiker geeft dan de gewenste bestandslocatie en -naam door aan het programma. Het programma laadt het opgegeven bestand in en hervat het opgeslagen spel.

UC 7: Speler verwijderen
Actoren : Een speler
Beschrijving : Tijdens het spelverloop kan een speler, die aan de beurt is, zichzelf uit het spel verwijderen. Dit laat hij aan de applicatie weten, en na bevestiging door de gebruiker wordt deze in het spel vervangen door een computergestuurde speler. Het niveau van die speler wordt dan bepaald a.h.v. de tot dan behaalde punten. 

UC 8: Tafeloverzicht wijzigen
Actoren : Een speler
Beschrijving : De speler wenst tijdens het spelverloop het tafeloverzicht te wijzigen. Dit doet hij door het programma beweegrichtingen aan te geven. De applicatie visualiseert deze beweging met een wijzing van het tafeloverzicht als gevolg.
































Fully Dressed Use Cases:


UC 1: Nieuw spel starten
Cross References: R3, R4, R8, R10, R11, R25, R28
Primary Actor: Speler
Stakeholders and Interests:
Mogelijke menselijke medespelers
Supporters
Preconditions: De applicatie is succesvol opgestart. (R1)
Succes Guarantee (Postconditions): Het spel start met de gewenste configuratie, de initiële starttegel is geplaatst. De timer is gestart en de eerste speler kan beginnen.

Main Succes Scenario (or Basic Flow):
Actor Action (or Intention)
System Responsibility
Vraagt om een nieuw spel te starten.






Start het spel met de standaard instellingen.


Keurt starttegel goed.




Geeft alle instel mogelijkheden weer, met standaard waarden voor aantal menselijke en computergestuurde spelers, hun respectievelijke kleuren, namen, niveaus en het aantal tegels dat het spel bevat.(R3)


Stelt starttegel voor (R4) + speelt een passend geluidje af (R28).

Geeft de beurt aan de eerste speler.(R10 + R11) + speelt een passend geluidje af (R28) + start de timer (R25).

Extensions (or Alternitive Flows):
Actor Action (or Intention)
System Responsibility
                                                         *a.  Op elk ogenblik kan de speler kiezen om
                                                                het spel niet te starten. 
                                                              1. Kiest ervoor om het proces voortijdig 
                                                                   te beëindigen.

 



    *b. Op elk ogenblik kan het systeem falen.
          1.  Start het systeem opnieuw op
      
                                                          3a. Verandert instellingen
                                                               1a. Laat het standaard  aantal menselijke
                                                                    spelen staan.
                                                              1b. Stelt aantal menselijke spelers in.
                                                              2a. Laat het standaard  aantal
                                                                    computergestuurde spelen staan.
              2b. Stelt aantal computergestuurde
                   spelers in.
              3a. Laat de standaard kleuren staan.
         3b. Stelt de nieuwe kleuren in voor de
               verschillende spelers.
         4a. Laat de standaard namen staan.
         4b. Stelt de namen voor de verschillende
               spelers in.
         5a. Laat de standaard niveaus van de 
               computergestuurde spelers staan.
         5b. Stelt de niveaus van de 
               computergestuurde spelers in.
         6a. Laat het standaard aantal tegels 
               staan.
         6b. Stelt het aantal tegels in.

     5a[1]. Keurt starttegel af
      

       

         2a. Indien er een vorige spel bestaat wordt
               dit hervat(R8 -> spel van geheugen 
                i.p.v. van elders inlezen).
         2b. Anders terug naar vorige situatie.
























    


     5a[2]. Herstart stap 4 in de main flow.


UC 2: Een beurt afleggen
Cross References: R5, R6, R10, R11, R13, R14, R15, R16, R17, R18, R21, R22, R23, R24, R26, R28, R32, R33
Primary Actor: Speler
Stakeholders and Interests:
Mogelijke menselijke medespelers
Supporters
Preconditions: Een spel is succesvol gestart. De huidige speler is aan de beurt.
Succes Guarantee (Postconditions): De zet is afgewerkt en een volgende speler is aan de beurt.

Main Succes Scenario (or Basic Flow):
Actor Action (or Intention)
System Responsibility
     1. Vraagt om een tegel van de stapel te 
         nemen.


     3. Plaatst tegel.
     


     6. Kiest geen pion te plaatsen.
     

     2.Geeft een tegel aan speler (R13 en R24) + 
        speelt een passend geluidje af (R28).

     4. Verifieert de gedane zet.(R16)
     5. Geeft aan dat de zet ok is en speelt geluid 
         af.(R28)

     7. Systeem geeft de beurt door aan een
         volgende speler.(R10 + R11)

Extensions (or Alternitive Flows):
Actor action or intention
System Responsibility
     *a. De speler wenst het spel te herstarten met 
          de huidige instellingen.    

          2a. Bevestigt.
     

          2b. Bevestigt niet.


     *b. Kiest ervoor om het spel te pauzeren.




          2. Wenst te hervatten.

     *c. Kiest ervoor om een cheat in te voeren.


     *d. Kiest ervoor om een spel in te laden.
           (Use Case 5)
     *e. Kiest ervoor om het spel op te slaan.
           (Use Case 6)
     *f. Kiest ervoor om de help te raadplegen.
           (Use Case 3)
     *g. Kiest ervoor om een speler te 
           verwijderen. (Use Case 7)
     *h. Kiest ervoor om het speloverzicht te 
           wijzigen. (Use Case 8)
     *i. Kiest ervoor om het spel te beëindigen.
          (R5)






     2a. Vraagt om tegel te draaien.
          1a.  Vraagt om naar links te draaien
          1b.  Vraagt om naar rechts te draaien


          3a. Herhaal stap 1a of 1b.
          3b. Ga naar stap 2 in de basic flow.

     

     
     2-4a. Stelt vast dat de tegel niet plaatsbaar is.
          1. Vraagt om de tegel terug in de stapel te 
              leggen.




     2-4b. Stelt vast dat de tegel op een andere
               plaats wel plaatsbaar is.

           2. Terug naar stap 2 in de basic flow.

     5a. Kiest wel een pion te plaatsen.
          1a. Plaatst de pion op de weide.
          1b. Plaatst de pion op de weg.
          1c. Plaatst de pion op het stadsdeel.
          1d. Plaatst de pion op het klooster.







     

     5b. Neemt de pion terug.


          1.  Vraagt om bevestiging.
     
          3a. Herstart het spel met de huidige 
                instellingen. (R6)

          3b. Het huidige spel wordt verdergezet.


          1. Pauzeert het spel. (R21) (stopt de
              tijdsmeting) Wacht op invoer van de
              speler.

          3. Hervat spel en tijdsmeting.


          1. Voert de cheat uit. (R32)














     1a. Geeft geen tegel aan speler, wegens geen 
           tegels meer. (R26 en R24) Bereken de 
           scores (R22) en duid de winnaar aan 
           (R28). (R5)




           2. Draait tegel (R15), speelt geluid af
               (R28), toont animatie. (R33)
          


     4a. Accepteert de plaatsing niet en speelt een
           geluid af.(R28)
          1. Geeft de tegel terug.



          2. Legt de tegel terug in de stapel. (R14 en 
              R24)
          3. Terug naar stap 1 in de basic flow.



          1. Geeft de tegel terug.






          
          2. Verifieert de plaatsing.(R17.1)
               1a. Als de zet geldig is, speelt het
                     systeem een geluid (R28) af 
                     naargelang het landsdeel waar de 
                     pion op geplaatst werd.(R17.2)
              1b.  Als de zet niet geldig is, geeft het
                     systeem de pion terug en wordt een
                     geluid afgespeeld.(R28 + R17.3)


     6. Verifieert het terugnemen van de pion. 
          (R18.1)
          1a. Als het terugnemen geldig is, werkt
                het systeem de punten bij (R18.3 en 
                R23 en R27) en wordt er een geluid 
                afgespeeld (R28).
          1b. Als het terugnemen niet geldig is,
                gebeurt er niets en wordt er een geluid   
                afgespeeld (R28 + R18.2).










  UC 3: Help raadplegen
Cross References: R1, R9, R21
Primary Actor: Speler
Stakeholders and Interests:
Mogelijke menselijke medespelers
Supporters
Preconditions: De applicatie is succesvol opgestart.  (R1)
Succes Guarantee (Postconditions): De speler heeft de gewenste informatie verkregen en gebruikt deze om verder te gaan.

Main Succes Scenario (or Basic Flow):
Actor Action (or Intention)
System Responsibility
      1. Roept de hulpfunctie van de
          applicatie op.


      3. Geeft de gewenste zoektermen
          op. 


      5. Gebruikt de informatie die nuttig  
          is voor hem/haar. Waarna hij het spel
          hervat.

     2. Laat weten dat hij wacht op 
         input van de gebruiker.(R9)



     4. Geeft informatie die het
         beste overeenkomt met de zoektermen.
 


     6. Het programma/spel wordt hervat.

  Extensions (or Alternitive Flows):
Actor Action (or Intention)
System Responsibility
      *a. De gebruiker kan op elk moment de hulp
            van het programma beëindigen.


     





          1. Ga naar stap 3.

     5a. De speler krijgt niet zijn gewenste
           informatie.
          1. Ga naar stap 3.
      
     5b. De gebruiker wil opnieuw zoeken.
           1. Ga naar stap 3.


          1. Ga naar stap 6.

     *b. Indien help opgeroepen wordt tijdens het 
           spelverloop, wordt het spel gepauzeerd.
           (R21)
  
     4a. Het programma vindt geen informatie bij
           de opgegeven zoekterm.



UC 4: Programmainstellingen veranderen
Cross References: R1, R31
Primary Actor: Gebruiker
Stakeholders and Interests:
Mogelijke menselijke medespelers
Supporters
Preconditions: De applicatie is succesvol opgestart. (R1)
Succes Guarantee (Postconditions): De instelling die de gebruiker heeft ingegeven worden merkbaar.

Main Succes Scenario (or Basic Flow):
Actor Action (or Intention)
System Responsibility
     1. De speler vraagt de mogelijkheid om 
         instellingen te wijzigen.


     3. De speler verandert instellingen.
          1a. Verandert de achtergrondafbeelding. 
                (R30)



          1b. Zet Geluid aan of uit.(R29)
          1c. Zet animatie aan of uit.
          1d. Verandert de tafelgrootte.

     4. Speler keurt de instellingen goed.



     2. Het programma geeft de mogelijkheid om 
         instellingen te wijzigen.



          2. Controleer de geldigheid van het 
              opgegeven bestand. Het bestand is 
              geldig en wordt ingeladen. (R31)

   

          2. Controleer of de tafelgrootte geldig is.

     5. Voert de veranderingen door.
     6. Hervat het verloop van het programma.

  Extensions (or Alternitive Flows):
Actor Action (or Intention)
System Responsibility
      *a. De gebruiker kan op elk moment het
            wijzigen van de instellingen annuleren.

       
      *b. De gebruiker kan op elk moment de 
            standaardwaarden terug verkrijgen.

      *c. De gebruiker kan op elk moment de 
            vorige instellingen terug verkrijgen.

      3a. Ga naar stap 3.
     



          2. Ga naar stap 3









          2. Ga naar stap 3.
     
    4a. De speler keurt de instellingen af.


          1. Ga naar stap 6.









     3(1a).2.a. Het opgegeven bestand is ongeldig.
          1. Geeft melding en gebruikt het 
              opgegeven bestand niet.






     3(1d).2.a. De opgegeven tafelgrootte is 
                      ongeldig.
          1. Geeft melding en gebruikt de 
              opgegeven tafelgrootte niet.



           1. Ga naar stap 6.


UC 5: Spel laden
Cross References: R1, R8, R27
Primary Actor: Gebruiker
Stakeholders and Interests:
Mogelijke menselijke medespelers
Supporters
Preconditions: De applicatie is succesvol opgestart (R1), er is ooit een spel opgeslaan.
Succes Guarantee (Postconditions): De gebruiker hervat het opgeslagen spel.

Main Succes Scenario (or Basic Flow):
Actor Action (or Intention)
System Responsibility
     1. De gebruiker vraagt de mogelijkheid om 
         een spel te laden


     3. De gebruiker kiest een bestandslocatie




     6.  De gebruiker kiest een bestandsnaam.



     2. Geeft de mogelijkheid om 
         een spel te zoeken en te laden.
     
     4. Controleer geldigheid van de 
          bestandslocatie.
     5. De locatie is geldig, geeft de inhoud van de 
         opgegeven locatie weer.

     7. Controleert geldigheid van het bestand
     8. De opgegeven bestandsnaam is geldig, 
         het spel wordt ingeladen en hervat. (R8 en 
         R27)






  Extensions (or Alternitive Flows):
Actor Action (or Intention)
System Responsibility
      *a. Op elk moment kan de gebruiker het 
            laden van een spel annuleren.



      3a. Ga naar stap 3.

      3b. Ga naar stap 6, gebruik makende van een 
            voorgestelde locatie.





      6a. Ga naar stap 6.
      6b. Ga naar stap 3.


          1. Hervat wat het bezig was.







      5a. De opgegeven bestandslocatie is 
            ongeldig.
             1. Geeft een melding.
             2. Ga naar stap 3.



     8a. Het opgegeven bestand is ongeldig.
             1. Geeft een melding.
             2. Ga naar stap 6.


UC 6: Spel opslaan
Cross References: R1, R7, R27
Primary Actor: Gebruiker
Stakeholders and Interests:
Mogelijke menselijke medespelers
Supporters
Preconditions: De applicatie is succesvol opgestart (R1), er is een spel gestart.
Succes Guarantee (Postconditions): De gebruiker hervat het huidige spel en dit spel werd naar een bestand weggeschreven.

Main Succes Scenario (or Basic Flow):
Actor Action (or Intention)
System Responsibility
     1. Vraagt de mogelijkheid om 
         een spel op te slaan.


     3. Kiest een bestandslocatie.




     6. Kiest een bestandsnaam.



     2. Geeft de mogelijkheid om een
         bestandslocatie te zoeken.
     
     4. Controleert geldigheid van de 
          bestandslocatie.
     5. De locatie is geldig, geeft de inhoud van de 
         opgegeven locatie weer.

     7. Controleert geldigheid van de extentie van 
         het bestand en het uniek zijn van de
         bestandsnaam.
     8. De opgegeven bestandsnaam is geldig, 
         het spel wordt opgeslagen en voortgezet.
         (R7 en R27)

  Extensions (or Alternitive Flows):
Actor Action (or Intention)
System Responsibility
      *a. Op elk moment kan de gebruiker het 
            opslaan van een spel annuleren.



      *b. Op elk ogenblik kan het opslagmedium
            plaatsgebrek hebben.



      3a. Ga naar stap 3.








      6a. Ga naar stap 6.
      6b. Ga naar stap 3.




          2a. Kiest ervoor niet te overschrijven.

          2b. Kiest ervoor wel te overschrijven.


          1. Hervat wat het bezig was.




           1. Geeft een melding.
           2. Keert terug naar de vorige stap.





      5a. De opgegeven bestandslocatie is 
            ongeldig.
             1. Geeft een melding.
             2. Ga naar stap 3.




     7a. De opgegeven bestandsnaam bestaat al.
            1. Geeft een melding, of hij mag 
                overschrijven of niet.
     
                 1. Ga naar stap 6.     

                 1. Ga naar stap 8.

     8a. De opgegeven extentie is ongeldig.
             1. Geeft een melding.
             2. Ga naar stap 6.






UC 7: Speler verwijderen
Cross References: R1, R12
Primary Actor: Gebruiker
Stakeholders and Interests:
Mogelijke menselijke medespelers
Supporters
Preconditions: De applicatie is succesvol opgestart (R1), er is een actief spel.
Succes Guarantee (Postconditions): De speler is vervangen door een computergestuurde speler.

Main Succes Scenario (or Basic Flow):
Actor Action (or Intention)
System Responsibility
      1. Vraagt om zichzelf uit het 
          spel te verwijderen.


      3. Bevestigt.

      
      5. Aanvaardt het voorgestelde niveau.


     2. Vraagt om bevestiging.
     
     
     4. Stelt standaard niveau van de 
         computergestuurde speler voor.
     
     6. Vervangt de speler met een 
          computergestuurde speler en hervat het 
          spel. (R12)

  Extensions (or Alternitive Flows):
Actor Action (or Intention)
System Responsibility
      *a. Op elk moment kan de gebruiker het 
            verwijderen van de speler annuleren.


      3a. Bevestigt niet.


      5a. Aanvaardt het voorgestelde niveau niet.
           1. Kiest ander niveau uit een aantal 
               mogelijkheden.


          1. Hervat wat het bezig was.


          1. Hervat wat het bezig was.




          2. Ga naar stap 6.











UC 8: Tafeloverzicht wijzigen
Cross References: R1, R19, R28
Primary Actor: Gebruiker
Stakeholders and Interests:
Mogelijke menselijke medespelers
Supporters
Preconditions: De applicatie is succesvol opgestart (R1), er is een spel gestart.
Succes Guarantee (Postconditions): De gebruiker hervat het huidige spel, met een nieuw over-                                              zicht.

Main Succes Scenario (or Basic Flow):
Actor Action (or Intention)
System Responsibility
     1. Wijzigt het overzicht.
          1a. Beweegt het veld naar links.
          1b. Beweegt het veld naar rechts.
          1c. Beweegt het veld naar boven.
          1d. Beweegt het veld naar onder.
          1e. Roteert het veld naar links.
          1f. Roteert het veld naar rechts.
          1g. Zoomt in.
          1h. Zoomt uit.












     2. Controleert of de wijziging mogelijk is.
     3. Indien de wijzing mogelijk is, voert deze
         uit.(R19)
     4. Het spel wordt hervat.     

  Extensions (or Alternitive Flows):
Actor Action (or Intention)
System Responsibility
      *a. Op elk moment kan de gebruiker het
            overzicht herzetten naar het standaard
            beeld.



      *b. Op elk ogenblik kan de gebruiker zijn
            laatste camerabewerking ongedaan
            maken.



      1a. Ga naar stap 1.

 


    
          1. Herzet het overzicht naar 
              standaardwaarden.




          1. Herzet het overzicht naar de vorige
              waarden.






     3a. Indien de overzichtswijziging niet
          mogelijk is.
          1. Geeft melding met geluid.(R28)
          2. Ga naar stap 4.













































Systeemsequentiediagrammen











































































Domeinmodel



















Contracten

Contract bij UC1: Nieuw spel starten
Name
startSpel()
Cross References
UC1, SSD1, SSD2
Pre-conditions
Applicatie is opgestart en spel is geïnitialiseerd.
Post-conditions
Wei, Stad, Klooster, Weg-instanties zijn aangemaakt (instance creation)
Landsdeel-instanties zijn aangemaakt (instance creation, association formed
(Wei, Stad, Klooster, Weg))
Tafel is aangemaakt. (instance creation, attribute modification (Tafel.oogpunt))
Tegel-instanties zijn aangemaakt. (instance creation, association formed
(Landsdeel), attribute modification (Tegel.oriëntatie))
Stapel tegels is aangemaakt. (instance creation, association formed (Tegel),
attribute modification (Stapel.aantalTegels))
Pion-instanties zijn aangemaakt. (instance creation)
Speler-instanties zijn aangemaakt. (instance creation, association formed
(Pion), attribute modification(Speler.naam, Speler.kleur, Speler.score))
Meerdere Mens-instanties zijn aangemaakt. (instance creation, association formed (Speler))
Meerdere AI-instanties zijn ingesteld. (instance creation, association formed
(Speler), attribute modification (AI.niveau))
Optie-instanties zijn aangemaakt (instance creation, attribute modification (Optie.waarde))
Spel is aangemaakt met zijn instellingen. (instance creation, association formed (Optie), association formed (Stapel), association formed (Tafel),
association formed (Speler))
Een starttegel is gelegd. (association broken (Stapel), association formed (Tafel))

Contract bij UC1: Starttegel niet aanvaarden
Name
aanvaardTegel(false)
Cross References
UC1, SSD1, SSD2
Pre-conditions
Spel is gestart, maar er is nog geen spelbeurt afgelegd.
Post-conditions
De huidige starttegel is teruggelegd in Stapel. (association broken (Tafel), association formed (Stapel))
Een nieuwe starttegel is gelegd. (association broken (Stapel), association formed (Tafel))






Contract bij UC2: Beurt afleggen
Name
vraagTegel()
Cross References
UC2, SSD3, SSD4, SSD5, SSD6
Pre-conditions
Spel is gestart en Speler is aan beurt.
Post-conditions
Stapel.aantalTegels is met 1 verminderd. (attribute modification)
Speler heeft Tegel gekregen. (association broken (Stapel), association formed (Speler))

Contract bij UC2: Beurt afleggen
Name
draaiTegel(richting)
Cross References
UC2, SSD5
Pre-conditions
Spel is gestart en Speler is aan beurt en Speler heeft tegel.
Post-conditions
Tegel.oriëntatie is veranderd conform de opgegeven richting. (attribute modification)

Contract bij UC2: Beurt afleggen
Name
plaatsTegel(tegel,plaats)
Cross References
UC2, SSD3, SSD4, SSD5, SSD6
Pre-conditions
Spel is gestart en Speler is aan beurt en Speler heeft tegel. 
Plaats is geldig voor Tegel.
Post-conditions
Tegel is gelegd op Tafel. (association broken (Speler), association formed (Tafel))

Contract bij UC2: Beurt afleggen
Name
plaatsPion(landsdeel)
Cross References
UC2, SSD3, SSD4, SSD5, SSD6
Pre-conditions
Spel is gestart en Speler is aan beurt en Speler heeft Tegel gelegd.
Pion kan op het gewenste landsdeel staan.
Post-conditions
Pion is op een landsdeel gelegd. (association formed (Landsdeel))

Contract bij UC2: Beurt afleggen
Name
neemPionTerug(landsdeel)
Cross References
UC2, SSD6
Pre-conditions
Spel is gestart en Speler is aan beurt en Speler heeft tegel gelegd en tijdens het huidige spel een pion gezet.
Pion kan teruggenomen worden.
Post-conditions
Pion is teruggenomen. (association broken (Landsdeel))
Speler.score werd aangepast. (attribute modification)

Contract bij UC4: Opties instellen
Name
veranderOptie(optie, value)
Cross References
UC4, UC2 en SSD8
Pre-conditions
De applicatie is opgestart en de opties zijn bekend.
Post-conditions
De veranderingen werden toegepast op het huidige spel en de daaropvolgende spellen. (attribute modification (Optie.waarde))

Contract bij UC5: Laden
Name
startLaden()
Cross References
UC5, UC2 en SSD10
Pre-conditions
Een spel is gestart en speler wil spel laden en het bestand is geldig.
Post-conditions
Wei, Stad, Klooster, Weg-instanties zijn aangemaakt (instance creation)
Landsdeel-instanties zijn aangemaakt (instance creation, association formed
(Wei, Stad, Klooster, Weg))
Tafel is aangemaakt. (instance creation, attribute modification (Tafel.oogpunt))
Tegel-instanties zijn aangemaakt. (instance creation, association formed
(Landsdeel), attribute modification (Tegel.oriëntatie))
Stapel tegels is aangemaakt. (instance creation, association formed (Tegel),
attribute modification (Stapel.aantalTegels))
Pion-instanties zijn aangemaakt. (instance creation)
Speler-instanties zijn aangemaakt. (instance creation, association formed
(Pion), attribute modification(Speler.naam, Speler.kleur, Speler.score))
Meerdere Mens-instanties zijn aangemaakt. (instance creation, association formed (Speler))
Meerdere AI-instanties zijn ingesteld. (instance creation, association formed
(Speler), attribute modification (AI.niveau))
Optie-instanties zijn aangemaakt (instance creation, attribute modification (Optie.waarde))
Spel is aangemaakt met zijn instellingen. (instance creation, association formed (Optie), association formed (Stapel), association formed (Tafel),
association formed (Speler))

Spel is gelinkt aan Bestand. (association formed (Spel <-> Bestand))
Tegels zijn gelegd. (association formed (Tafel))
Pionnen zijn geplaatst op landsdelen. (association formed (Pion <-> Landsdeel))
Speler.score-waarden zijn aangepast. (attribute modification)






Contract bij UC6: Opslaan
Name
startOpslaan()
Cross References
UC6, UC2 en SSD9
Pre-conditions
Een spel is bezig en Speler wil spel opslaan en de bestandsnaam is geldig.
Post-conditions
Bestand dat het spel bevat werd aangemaakt. (instance creation, association formed (Bestand <-> Spel), attribute modification (Bestand.naam))

Contract bij UC7: 
Name
verwijderSpeler()
Cross References
UC7, UC2 en SSD11, SSD12
Pre-conditions
Een spel is bezig, en de huidige menselijke Speler wil zichzelf verwijderen.
Post-conditions
Nieuwe AI is aangemaakt met de attributen van de menselijke speler en een welbepaald niveau. (instance creation, attribute modification (AI.niveau))
AI is gelinkt met de Speler-instantie gelinkt aan Mens. (association formed (AI <-> Speler)) 
Mens is verwijderd. (instance deletion)

Contract bij UC8: 
Name
wijzigOverzicht(richting)
Cross References
UC8, UC2 en SSD13
Pre-conditions
Een spel is bezig en een speler wenst het overzicht over de tafel te wijzigen.
Post-conditions
Tafel.oogpunt is aangepast. (attribute modification)




















Collaboratiediagrammen
















































Klassediagram

Gebruikte Design Patterns

Factory method pattern (Design Patterns p. 121):


Betrokken klassen:
Speler (cfr. Product), Mens en AI (cfr. ConcreteProduct), SpelerFactory (cfr. ConcreteCreator).
FactoryMethod wordt gemapt op maakSpeler(type).

Motivatie:
We gebruiken de Speler-klasse doorheen de andere klassen, doch moeten we in staat zijn Mens- en AI-klassen (subklassen van Speler) aan te maken. Het leek ons dus wel handig een SpelerFactory aan te maken. De juiste uitwerking moeten we nog uitdenken. Als we ooit netwerkmogelijkheden zouden implementeren kunnen we zo bvb. Ook makkelijk een nieuw soort speler toevoegen.


Strategy pattern (Design Patterns p. 349):

Betrokken klassen:
AI, Easy en Hard

Motivatie:
We kunnen hierdoor een familie van algoritmes definiëren, waardoor we makkelijk kunnen wisselen tussen de verschillende klasse-instanties. Hierdoor zal de A.I. ook makkelijker uitbreidbaar zijn.






Interessante Design Patterns

Er moet nog verder onderzocht worden of deze patronen daadwerkelijk een nuttige inbreng aan onze klassestructuur kunnen geven.

Flyweight pattern (Design Patterns p. 218):

Motivatie:
Dit patroon kunnen we gebruiken voor het voorstellen van de verzameling tegels op de tafel en de verschillende landsdelen op een tegel. Dit patroon zou ons m.a.w. een soort van containerstructuur kunnen geven,


State pattern (Design Patterns p. 338):


Motivatie:
De puntentelling moet aangepast worden aan de hand van het type van de pion. Dit hangt af van het landsdeel waarop de pion staat, dit hangt dus m.a.w. af van de status (= state) van de pion.


Observer pattern (Design Patterns p. 326):

Motivatie:
Om te voorkomen dat elke klasse die als attribuut in Spel zit een Spel-instantie moet meekrijgen om alzo een boodschap terug te kunnen geven aan die Spel-instantie, wordt er van een Observer-structuur gebruik gemaakt.


Proxy pattern (Design Patterns p. 233):


Motivatie:
Dit patroon kunnen we gebruiken voor bijvoorbeeld een file I/O handler te structureren. Hierdoor bekomen we een mechanisme om met files te werken, om alzo een Spel-instantie 1-op-1 op een bestand te mappen.







Singleton pattern (Design Patterns p. 233):


Motivatie:
Dit ontwerppatroon kunnen we gebruiken voor de Help-klasse, omdat er geen nood is aan meerdere Help-instanties.
