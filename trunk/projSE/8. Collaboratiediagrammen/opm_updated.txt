- neemPionTerug is nog ni helemaal koosjer, want die coordinaten moeten ergens vandaan komen
- de andere kloppen denk ik, ik heb ook de contracten nagekeken en volgens mij
zijn alle veranderingen die in de contracen voorkomen duidelijk in de diagrammen

ik weet wel niet wanneer ik er speler nu moet inzetten of niet, want die initieert de actie,
maar ja het is niet de klasse die het doet. In volgendeSpelbeurt staat speler er wel nog in,
maar ik die kan er ook uit. Of speler wordt in elk diagram toegevoegd
Ik stel voor om speler er niet in te zetten.

----------------------------------------------------------------------------------------------
- neemPionTerug is fel veranderd en strookt nu meer met hoe het écht gebeurt
  't is wel nog niet 100% in orde, maar soit
- plaatsPion was helemaal verkeerd: de systeemoperatie begint bij ons altijd bij Spel of
  een G-Klasse. Beginnen bij Tegel is not done.
- VolgendeSpelBeurt is wel héél bizar. Zo wordt dat langs geen kanten geimplementeerd bij ons.
  Er is niet eens iets gelijk een spelBeurtflow. VolgendeSpeler() komt 't dichtst in de beurt,
  en dan nog: daar worden gewoon AI-zetten in gedaan en bepaalde variabelen gereset.
- rest was quasi in orde, op een paar details na, die ik dan ook verbeterd heb

- Bepaalde aspecten komen niet in de collabs voor:
	zet van een AI (SpelbeurtResultaat komt dan ineens tevoorschijn)
	undo/redo (Statusbijhouder en Memento staan wel in DKG, maar in geen enkel collab)
  Probleem is dat die niet eens in onze use cases voorkomen, dus die processflows zouden 
  ineens uit 't niets komen bij ons.